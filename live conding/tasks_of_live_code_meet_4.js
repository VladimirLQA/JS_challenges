/*
* "Ваша задача состоит в том, чтобы вернуть выходную строку, созданную из входной строки s ,
* заменив каждый символ в s числом, представляющим количество раз,
* которое этот символ встречается в s, и разделив каждое число символом(символами) sep."
* */


function freqSep(str, separator) {
    return [...str.toLowerCase()].map((el, index, arr) =>
        arr.filter(e => el === e).length).join(`${separator} `);
}

console.log(freqSep('Toster', ';'));
console.log(freqSep('ffaanntazzzy', ';'));
console.log(freqSep('aaaaaaaaaaa', ';'));

console.log(`================================================`);

/*
 * "Напишите функцию, которая принимает список строк в качестве аргумента и возвращает отфильтрованный список,
 * содержащий те же элементы, но с удаленными «гусями».
 * Гуси — это любые строки в следующем массиве, который предварительно заполнен в вашем решении
 * Элементы в возвращаемом массиве должны быть в том же порядке, что и в исходном массиве, переданном вашей функции,
 * хотя и с удаленными «гусями». Обратите внимание, что все строки будут в том же регистре,
 * что и предоставленные, а некоторые элементы могут повторяться.
 * "input:
 * [""Кряква"", ""Крюк Билл"", ""Африканка"", ""Хохлатая"", ""Пилигрим"", ""Тулуза"", ""Синий шведский""]
 * Гуси = [""Африканка"", ""Римская хохлатая"", ""Тулуза"", ""Пилигрим"", ""Штайнбахер""]
 * Output:
 * [""Кряква"", ""Крюк Билл"", ""Хохлатая"", ""Синий шведский""]"
 */

function returnWithoutGeese(arr) {
    const geese = ["Африканка", "Римская хохлатая", "Тулуза", "Пилигрим", "Штайнбахер"];
    return arr.filter(el => !geese.includes(el));
}

console.log(returnWithoutGeese(["Кряква", "Крюк Билл", "Африканка", "Хохлатая", "Пилигрим", "Тулуза", "Синий шведский"]));

console.log(`================================================`);

/*
* "Напишите программу, которая считывает целое положительное число n, 1 <= n <= 9, и выводит сумму равную
* n + nn + nnn, где n не перемножаются, а конкатенируются
* + усложнение - паттерн для суммирования также задается пользователем, между цифрами лишь простые
* алгебраические знаки (- + . * )
* например  pattern = '# + ### - ##',  function sum(n, pattern)."
*/

function generateConcatedNumber(number, numberOfRepeats) {
    return +(''+number).repeat(numberOfRepeats);
}

function getConcatedValue(number, pattern) {
    return pattern
        ? ''
        :`${number} + ${generateConcatedNumber(number, 2)} + ${generateConcatedNumber(number, 3)} === ${number + generateConcatedNumber(number, 2) + generateConcatedNumber(number, 3)}`;
}

console.log(getConcatedValue(1));